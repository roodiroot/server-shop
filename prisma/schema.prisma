// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  fullName  String?
  avatar    String?
  password  String?
  provider  Provider?
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  roles     Role[]
  Token     Token[]
  isBlocked Boolean   @default(false) @map("is_blocked")

  @@map("users")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userAgent String   @map("user_agent")
  userId    String

  @@map("tokens")
}

model Type {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  img         String?
  models      Model[]
  categoryes  Category[]
  products    Product[]

  @@map("types")
}

model Category {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  img         String?
  types       Type[]
  models      Model[]
  products    Product[]

  @@map("categoryes")
}

model Model {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  img         String?
  types       Type[]
  categoryes  Category[]
  products    Product[]

  @@map("models")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  modelId     Int
  model       Model    @relation(fields: [modelId], references: [id], onDelete: Cascade)
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  typeId      Int
  type        Type     @relation(fields: [typeId], references: [id], onDelete: Cascade)
  size        Size[]
  parameter   String?

  @@map("products")
}

model Size {
  id        Int     @id @default(autoincrement())
  sizeMm    String?
  price     Int?
  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("sizes")
}

enum Role {
  ADMIN
  USER
}

enum Provider {
  GOOGLE
  YANDEX
}
